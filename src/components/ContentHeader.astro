---
interface Props {
  render: Render;
}
import type { Render } from "@lib/api";
const { render } = Astro.props;
import "@layouts/compositions/stack.css";

const key = "open";
const xData = JSON.stringify({ [key]: false });
---

<style>
  .stack {
    /* compositions/stack.css */
    --stack--spacing: auto;
  }
  header {
    display: inline-flex;
    align-items: center;
  }
  .tool {
    margin-left: auto;
  }
</style>

<div x-data={xData} class="stack || bg-blue">
  <header>
    <div class="|| bg-blue">{render.active || "Ja0nz"}</div>
    <div x-cloak class="tool">
      <button
        x-on:click={`${key} = ! ${key}`}
        x-bind:class={`${key} ? 'i-lucide-arrow-up-circle' : 'i-lucide-search'`}
      ></button>
      <button
        x-on:click={`colorScheme = colorScheme === 'dark' ? 'light' : 'dark'`}
        class="i-lucide-sun dark:i-lucide-moon dark:text-white"></button>
    </div>
  </header>
  <div class="show" x-show={key} x-transition>
    <input
      slot="subhead"
      type="text"
      placeholder="Search content"
      x-model="search"
      x-cloak
    />
  </div>
</div>
