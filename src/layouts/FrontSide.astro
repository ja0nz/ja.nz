---
interface Props {
  render: Render;
  requires?: AstroComponentFactory[];
}
import type { AstroComponentFactory } from "astro/dist/runtime/server";
import type { Render } from "@lib/api";
const { active, tags } = Astro.props.render;

import MenuCard from "@layouts/MenuCard.astro";
import "@layouts/compositions/stack.css";
---

<style>
  nav {
    /* Related to max-height; Menu scroll bar  */
    overflow-y: auto;
  }
  nav::-webkit-scrollbar {
    display: none;
  }
  img {
    height: var(--robot-height);
    width: var(--robot-height);
  }
</style>

<input
  slot="header"
  x-model="search"
  disabled
  x-bind:disabled="false"
  type="text"
  placeholder="Hit / to search ðŸ‘‡"
  x-on:keyup.slash.document="document.activeElement !== $el && $el.select()"
/>
<nav class="items">
  <ul slot="items">
    <template x-for="{tag, date, avatar} in f(search)">
      <li
        x-data={`{ active: "${active}" }`}
        x-init="active === tag && $el.scrollIntoView(false)"
        x-bind:class="active === tag && 'active'"
      >
        <MenuCard>
          <img slot="avatar" x-bind:src="avatar" />
          <a x-bind:href="'/tag/' + tag + '#main'">
            <span x-html="hl(search, tag)"></span>
          </a>
          <span x-text="date"></span>
        </MenuCard>
      </li>
    </template>
    {
      tags.map((item) => (
        <li x-show="0" class={active === item.tag ? "active" : ""}>
          <MenuCard>
            <img slot="avatar" src={item.avatar} />
            <a href={`"/tag/${item.tag}#main"`}>
              <span>{item.tag}</span>
            </a>
            <span>{item.date}</span>
          </MenuCard>
        </li>
      ))
    }
  </ul>
</nav>
