---
interface Props {
  requires?: AstroComponentFactory[];
  inp: { state?: string; ssgData: TMenuCard[] };
}
const { inp } = Astro.props;
const ssgData = inp.ssgData;
const active = inp.state;

import "@layouts/compositions/stack.css";

import MenuCard from "@layouts/MenuCard.astro";
import type { TMenuCard } from "@lib/api";
import type { AstroComponentFactory } from "astro/dist/runtime/server";
---

<style>
  .items {
    /* Related to max-height; Menu scroll bar  */
    overflow-y: auto;
  }
  .items::-webkit-scrollbar {
    display: none;
  }
</style>

<input
  slot="header"
  x-model="search"
  disabled
  x-bind:disabled="false"
  type="text"
  placeholder="Hit / to search ðŸ‘‡"
  x-on:keyup.slash.document="document.activeElement !== $el && $el.select()"
/>
<nav class="items">
  <ul slot="items">
    <template x-for="{tag, date, avatar} in f(search)">
      <MenuCard active={active}>
        <img slot="avatar" width="100" height="100" x-bind:src="avatar" />
        <a x-bind:href="'/tag/' + tag + '#main'">
          <span x-html="hl(search, tag)"></span>
        </a>
        <span x-text="date"></span>
      </MenuCard>
    </template>
    {
      ssgData.map((item) => (
        <MenuCard ssg={true} active={active}>
          <img slot="avatar" width="100" height="100" src={item.avatar} />
          <a href={`"/tag/${item.tag}#main"`}>
            <span>{item.tag}</span>
          </a>
          <span>{item.date}</span>
        </MenuCard>
      ))
    }
  </ul>
</nav>
